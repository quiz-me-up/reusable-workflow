name: 'Docker Hub Push'
description: 'Build and push Docker image to Docker Hub'
inputs:
  image_name:
    description: 'Docker image name (e.g., myapp)'
    required: true
  image_tag:
    description: 'Docker image tag (e.g., latest, v1.0.0)'
    required: true
    default: 'latest'
  dockerfile_path:
    description: 'Path to Dockerfile (leave empty to use bundled Dockerfile from action)'
    required: false
    default: ''
  context_path:
    description: 'Build context path'
    required: false
    default: '.'
  target_dir:
    description: 'Target directory for JAR file'
    required: false
    default: 'target'
  java_xmx:
    description: 'JVM max memory'
    required: false
    default: '512m'
  java_xms:
    description: 'JVM initial memory'
    required: false
    default: '256m'
  spring_profiles:
    description: 'Spring profiles'
    required: false
    default: 'docker'
  app_port:
    description: 'Application port'
    required: false
    default: '8080'
  dockerhub_username:
    description: 'Docker Hub username'
    required: true
  dockerhub_token:
    description: 'Docker Hub access token'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Set up docker
      uses: docker/setup-buildx-action@v3

    - name: Determine Dockerfile path
      shell: bash
      id: dockerfile
      run: |
        if [ -z "${{ inputs.dockerfile_path }}" ]; then
          echo "dockerfile_path=${GITHUB_ACTION_PATH}/Dockerfile" >> $GITHUB_OUTPUT
          echo "Using bundled Dockerfile from action"
        else
          echo "dockerfile_path=${{ inputs.dockerfile_path }}" >> $GITHUB_OUTPUT
          echo "Using custom Dockerfile: ${{ inputs.dockerfile_path }}"
        fi

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.dockerhub_username }}
        password: ${{ inputs.dockerhub_token }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.dockerhub_username }}/${{ inputs.image_name }}
        tags: |
          type=raw,value=${{ inputs.image_tag }}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context_path }}
        file: ${{ steps.dockerfile.outputs.dockerfile_path }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          TARGET_DIR=${{ inputs.target_dir }}
          XMX=${{ inputs.java_xmx }}
          XMS=${{ inputs.java_xms }}
          SPRING_PROFILES=${{ inputs.spring_profiles }}
          PORT=${{ inputs.app_port }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Output image details
      shell: bash
      run: |
        echo "Image pushed successfully!"
        echo "Image name: ${{ inputs.dockerhub_username }}/${{ inputs.image_name }}"
        echo "Tags: ${{ steps.meta.outputs.tags }}"
        echo "Digest: ${{ steps.build.outputs.digest }}"
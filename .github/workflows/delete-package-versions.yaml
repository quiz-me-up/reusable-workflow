name: Delete all Maven packages from organization

on:
  workflow_dispatch:
    inputs:
      confirm_deletion:
        description: 'Type "CONFIRM" to confirm deletion'
        required: true
        type: string
      repository_name:
        description: 'Repository name (optional - if empty, deletes all org packages)'
        required: false
        type: string

# Permissions requises
permissions:
  packages: write
  contents: read

# Variable d'environnement globale
env:
  GITHUB_TOKEN: ${{ secrets.TOKEN }}

jobs:
  list-packages:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.get-packages.outputs.packages }}
    steps:
      - name: Verify confirmation
        if: github.event.inputs.confirm_deletion != 'CONFIRM'
        run: |
          echo "❌ Deletion cancelled - confirmation required"
          exit 1

      - name: List Maven packages
        id: get-packages
        run: |
          if [ -n "${{ github.event.inputs.repository_name }}" ]; then
            echo "🔍 Fetching Maven packages for repository: ${{ github.event.inputs.repository_name }}"
            # Get packages from specific repository
            packages=$(curl -s \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.inputs.repository_name }}/packages?package_type=maven&per_page=100" \
              | jq -r '.[].name')
          else
            echo "🔍 Fetching all Maven packages from organization..."
            # Get all Maven packages from the organization
            packages=$(curl -s \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/orgs/${{ github.repository_owner }}/packages?package_type=maven&per_page=100" \
              | jq -r '.[].name')
          fi
          
          # Convert to JSON array for matrix
          packages_json=$(echo "$packages" | jq -R -s -c 'split("\n") | map(select(length > 0))')
          echo "packages=$packages_json" >> $GITHUB_OUTPUT
          
          echo "📦 Maven packages found:"
          echo "$packages" | while read -r package; do
            if [ -n "$package" ]; then
              echo " - $package"
            fi
          done

  delete-packages:
    needs: list-packages
    runs-on: ubuntu-latest
    if: needs.list-packages.outputs.packages != '[]'
    strategy:
      matrix:
        package: ${{ fromJson(needs.list-packages.outputs.packages) }}
      fail-fast: false
    steps:
      - name: Delete Maven package
        run: |
          echo "🗑️ Attempting to delete package: ${{ matrix.package }}"
          
          # Use the package deletion API with custom token
          response=$(curl -s -w "%{http_code}" -X DELETE \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/orgs/${{ github.repository_owner }}/packages/maven/${{ matrix.package }}")
          
          http_code="${response: -3}"
          response_body="${response%???}"
          
          case $http_code in
            204)
              echo "✅ Package ${{ matrix.package }} deleted successfully"
              ;;
            403)
              echo "❌ Permission denied for package ${{ matrix.package }}"
              echo "Check organization permissions and token scopes"
              exit 1
              ;;
            404)
              echo "ℹ️ Package ${{ matrix.package }} not found or already deleted"
              ;;
            *)
              echo "❌ Unexpected error for package ${{ matrix.package }}"
              echo "HTTP code: $http_code"
              echo "Response: $response_body"
              exit 1
              ;;
          esac

      - name: Deletion result
        run: |
          echo "📋 Processing completed for package: ${{ matrix.package }}"

  cleanup-summary:
    needs: [list-packages, delete-packages]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Operation summary
        run: |
          echo "## 📋 Maven packages deletion summary"
          echo ""
          
          if [ -n "${{ github.event.inputs.repository_name }}" ]; then
            echo "🎯 **Target**: Repository '${{ github.event.inputs.repository_name }}'"
          else
            echo "🎯 **Target**: All organization packages"
          fi
          
          echo ""
          
          if [ "${{ needs.list-packages.outputs.packages }}" == "[]" ]; then
            echo "ℹ️ **Result**: No Maven packages found"
          else
            package_count=$(echo '${{ needs.list-packages.outputs.packages }}' | jq length)
            echo "📦 **Packages processed**: $package_count"
            echo ""
          
            if [ "${{ needs.delete-packages.result }}" == "success" ]; then
              echo "✅ **Status**: All packages deleted successfully"
            elif [ "${{ needs.delete-packages.result }}" == "failure" ]; then
              echo "❌ **Status**: Some packages could not be deleted"
            else
              echo "⚠️ **Status**: Deletion process was cancelled or skipped"
            fi
          fi
          
          echo ""
          echo "🕐 **Completed at**: $(date)"
